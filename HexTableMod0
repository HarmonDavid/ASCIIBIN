#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char binary[8];
    char ascii[2];
    char hex[3]; // Two characters for hex representation plus null terminator
} LookupEntry;

LookupEntry lookupTable[] = {
    {"0000000", {'\0', '\0'}, "00"},      // NUL
    {"0000001", {'\x01', '\0'}, "01"},    // SOH
    {"0000010", {'\x02', '\0'}, "02"},    // STX
    {"0000011", {'\x03', '\0'}, "03"},    // ETX
    {"0000100", {'\x04', '\0'}, "04"},    // EOT
    {"0000101", {'\x05', '\0'}, "05"},    // ENQ
    {"0000110", {'\x06', '\0'}, "06"},    // ACK
    {"0000111", {'\a', '\0'}, "07"},      // BEL
    {"0001000", {'\b', '\0'}, "08"},      // BS
    {"0001001", {'\t', '\0'}, "09"},      // TAB
    {"0001010", {'\n', '\0'}, "0A"},      // LF
    {"0001011", {'\v', '\0'}, "0B"},      // VT
    {"0001100", {'\f', '\0'}, "0C"},      // FF
    {"0001101", {'\r', '\0'}, "0D"},      // CR
    {"0001110", {'\x0E', '\0'}, "0E"},    // SO
    {"0001111", {'\x0F', '\0'}, "0F"},    // SI
    {"0010000", {'\x10', '\0'}, "10"},    // DLE
    {"0010001", {'\x11', '\0'}, "11"},    // DC1
    {"0010010", {'\x12', '\0'}, "12"},    // DC2
    {"0010011", {'\x13', '\0'}, "13"},    // DC3
    {"0010100", {'\x14', '\0'}, "14"},    // DC4
    {"0010101", {'\x15', '\0'}, "15"},    // NAK
    {"0010110", {'\x16', '\0'}, "16"},    // SYN
    {"0010111", {'\x17', '\0'}, "17"},    // ETB
    {"0011000", {'\x18', '\0'}, "18"},    // CAN
    {"0011001", {'\x19', '\0'}, "19"},    // EM
    {"0011010", {'\x1A', '\0'}, "1A"},    // SUB
    {"0011011", {'\x1B', '\0'}, "1B"},    // ESC
    {"0011100", {'\x1C', '\0'}, "1C"},    // FS
    {"0011101", {'\x1D', '\0'}, "1D"},    // GS
    {"0011110", {'\x1E', '\0'}, "1E"},    // RS
    {"0011111", {'\x1F', '\0'}, "1F"},    // US
    {"0100000", {' ', '\0'}, "20"},       // Space
    {"0100001", {'!', '\0'}, "21"},
    {"0100010", {'"', '\0'}, "22"},
    {"0100011", {'#', '\0'}, "23"},
    {"0100100", {'$', '\0'}, "24"},
    {"0100101", {'%', '\0'}, "25"},
    {"0100110", {'&', '\0'}, "26"},
    {"0100111", {'\'', '\0'}, "27"},
    {"0101000", {'(', '\0'}, "28"},
    {"0101001", {')', '\0'}, "29"},
    {"0101010", {'*', '\0'}, "2A"},
    {"0101011", {'+', '\0'}, "2B"},
    {"0101100", {',', '\0'}, "2C"},
    {"0101101", {'-', '\0'}, "2D"},
    {"0101110", {'.', '\0'}, "2E"},
    {"0101111", {'/', '\0'}, "2F"},
    {"0110000", {'0', '\0'}, "30"},
    {"0110001", {'1', '\0'}, "31"},
    {"0110010", {'2', '\0'}, "32"},
    {"0110011", {'3', '\0'}, "33"},
    {"0110100", {'4', '\0'}, "34"},
    {"0110101", {'5', '\0'}, "35"},
    {"0110110", {'6', '\0'}, "36"},
    {"0110111", {'7', '\0'}, "37"},
    {"0111000", {'8', '\0'}, "38"},
    {"0111001", {'9', '\0'}, "39"},
    {"0111010", {':', '\0'}, "3A"},
    {"0111011", {';', '\0'}, "3B"},
    {"0111100", {'<', '\0'}, "3C"},
    {"0111101", {'=', '\0'}, "3D"},
    {"0111110", {'>', '\0'}, "3E"},
    {"0111111", {'?', '\0'}, "3F"},
    {"1000000", {'@', '\0'}, "40"},
    // ... (continue filling in for all ASCII characters)
    {"1111111", {'\x7F', '\0'}, "7F"}  // DEL
};

// ... (Rest of the functions remain the same)

int main() {
    // Test the conversion functions
    const char* text = "Hello, World!";
    size_t binaryLength;
    char* binary = convertTextToBinary(text, &binaryLength);
    if (binary == NULL) {
        printf("Error converting text to binary.\n");
        return 1;
    }

    printf("Text: %s\n", text);
    printf("Binary: %s\n", binary);

    char* convertedText = convertBinaryToText(binary, binaryLength);
    if (convertedText == NULL) {
        printf("Error converting binary to text.\n");
        free(binary);
        return 1;
    }

    printf("Converted Text: %s\n", convertedText);

    free(binary);
    free(convertedText);

    return 0;
}
